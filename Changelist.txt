changes from 0.4.4 to 0.4.5:
- made compatible with 0.18.27+ , by using the new raise_built flag instead of calling script raise entity event.
- biter factions should no longer cause a tick error for squads/forces

changes from 0.4.5 to 0.4.6:
 - compatibility with 1.1.1, deployable flying robots unlocked at same tech level as their capsule friends. defender, distractor, and destroyer at the same tech levels,
 rather than all of them ready as soon as you get Defender tech. 

changes from 0.4.6 to 0.4.7:
 - removed migration file for v.0.3.5, super old and not needed, was causing issues with referring to old/out-dated tech names too. 

changes from 0.4.7 to 0.4.8: 
 - fixes to the Droid Counter module and the Settings Module code, which had issues with referencing parameters tables which have changed in recent history. 
   instead of  control_behaviours.parameters.parameters,  there's only one layer of parameters table now. Yay! Means I can get rid of the comment I had in the code, "-- ridiculous, we have to do parameters WHY WUBE WHY"

changes from 0.4.8 to 0.4.9:
 - upgrading the version requirement of Unit Control (optional mod) to 3.10 for supporting the new API
 - fixes to how the mod uses the new Unit Control API for raising unit events from known deployers. 
 - adding Guard Station to deployer supported for Unit Control
 - reducing how/when the guard and assembler stations try to run logic when spawning units while Unit Control is active. Basically all droid processing is halted.

 changes from 0.4.9 to 0.4.10:
  - if unit control is active, don't run the runtime logic for assemblers squad management/merging/retreat and assembler-centric targetting, 
  and don't run the squad logic at all. This should help in-progress games which add unit control halfway through. 
  - added ai_settings to all droid units and flying units to try to prevent units from being deleted if they fail a command, and for them to attempt to spread out from eachother and not stack up.

 changes from 0.4.10 to 0.4.11:
  - added a for-each-force loop instead of specific forces, during init routine to set up each force
  - added a handleOnScriptRaisedBuilt function for script-spawned entity event handling.
  - adding migration file to help players who add mod after starting game to auto detect existing techs and unlock recipes properly for them.